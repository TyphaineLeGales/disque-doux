import React from 'react';
import { View } from 'react-native';
import Animated, { useAnimatedStyle, withTiming } from 'react-native-reanimated';
import { useSafeAreaInsets } from 'react-native-safe-area-context';
import Svg, { Path, G } from 'react-native-svg';

import { useLevelStore } from '@/stores/levelStore';

type ProgressBarProps = {
  currentPhase: number;
  totalPhases: number;
  phaseProgress: number;
};

const COLORS = {
  completed: '#EC7611',
  background: '#E8C29C',
} as const;

const Level1Icon = () => (
  <Svg width="54" height="54" viewBox="0 0 54 54" fill="none">
    <Path
      d="M22.6835 5.27038C23.7191 4.17944 25.3936 4.00187 26.6349 4.85134L31.5927 8.24396C32.1246 8.60798 32.7579 8.79491 33.4022 8.77814L39.4076 8.62184C40.9113 8.58271 42.2209 9.64118 42.498 11.1196L43.6047 17.0242C43.7235 17.6578 44.0391 18.2377 44.5066 18.6815L48.8635 22.8174C49.9545 23.853 50.132 25.5275 49.2826 26.7689L45.8899 31.7266C45.5259 32.2586 45.339 32.8918 45.3558 33.5362L45.5121 39.5416C45.5512 41.0453 44.4927 42.3549 43.0143 42.632L37.1097 43.7387C36.4761 43.8574 35.8962 44.173 35.4524 44.6405L31.3165 48.9975C30.2809 50.0884 28.6064 50.266 27.365 49.4165L22.4073 46.0239C21.8753 45.6599 21.2421 45.473 20.5977 45.4897L14.5923 45.646C13.0886 45.6852 11.779 44.6267 11.5019 43.1482L10.3952 37.2436C10.2765 36.6101 9.96088 36.0301 9.49338 35.5864L5.13642 31.4504C4.04548 30.4148 3.8679 28.7404 4.71738 27.499L8.10999 22.5412C8.47402 22.0093 8.66095 21.376 8.64418 20.7317L8.48788 14.7263C8.44875 13.2226 9.50722 11.913 10.9857 11.6359L16.8903 10.5292C17.5238 10.4104 18.1038 10.0948 18.5475 9.62735L22.6835 5.27038Z"
      fill="#FCCB43"
    />
    <Path
      d="M22.762 6.01177C23.7976 4.92083 25.4721 4.74326 26.7134 5.59274L31.4231 8.81562C31.9551 9.17964 32.5883 9.36657 33.2327 9.3498L38.9376 9.20133C40.4413 9.16219 41.7509 10.2207 42.028 11.6991L43.0794 17.3083C43.1981 17.9419 43.5137 18.5218 43.9812 18.9656L48.1202 22.8946C49.2112 23.9302 49.3887 25.6047 48.5392 26.846L45.3164 31.5558C44.9523 32.0877 44.7654 32.721 44.7822 33.3653L44.9307 39.0703C44.9698 40.574 43.9113 41.8836 42.4329 42.1607L36.8237 43.212C36.1901 43.3308 35.6102 43.6463 35.1664 44.1138L31.2374 48.2528C30.2018 49.3438 28.5273 49.5213 27.2859 48.6719L22.5762 45.449C22.0443 45.085 21.411 44.898 20.7667 44.9148L15.0617 45.0633C13.558 45.1024 12.2484 44.0439 11.9713 42.5655L10.92 36.9563C10.8012 36.3227 10.4856 35.7428 10.0181 35.299L5.87915 31.37C4.78821 30.3344 4.61064 28.6599 5.46012 27.4186L8.683 22.7088C9.04702 22.1769 9.23395 21.5436 9.21718 20.8993L9.06871 15.1943C9.02957 13.6906 10.088 12.3811 11.5665 12.1039L17.1757 11.0526C17.8092 10.9338 18.3892 10.6183 18.833 10.1508L22.762 6.01177Z"
      stroke="#EC7611"
      stroke-width="1.02104"
    />
    <Path
      d="M22.3485 34.0851C22.3709 34.115 22.3799 34.1504 22.4041 34.1793C22.4392 34.2185 22.4858 34.2365 22.5259 34.268C22.5731 34.3073 22.6192 34.3448 22.6717 34.3749C22.7232 34.4033 22.7751 34.4242 22.8305 34.443C22.9089 34.4723 22.9867 34.4923 23.0687 34.5014C23.1027 34.5042 23.136 34.5037 23.1707 34.5036C23.2744 34.5047 23.3747 34.4899 23.4776 34.4591C23.4957 34.4532 23.5114 34.4452 23.5295 34.4393C23.5976 34.4147 23.6675 34.401 23.7308 34.3601C23.776 34.331 23.8043 34.2856 23.8435 34.2505C23.8453 34.2494 23.8485 34.2487 23.8488 34.2473L35.7531 22.9187C35.8523 22.8283 35.9326 22.7192 35.9896 22.5977C36.0466 22.4762 36.0791 22.3447 36.0852 22.2106C36.0914 22.0765 36.0711 21.9426 36.0254 21.8164C35.9798 21.6902 35.9098 21.5742 35.8193 21.475C35.7289 21.3759 35.6198 21.2955 35.4983 21.2386C35.3768 21.1816 35.2453 21.1491 35.1112 21.1429C34.9772 21.1368 34.8432 21.1571 34.717 21.2027C34.5908 21.2483 34.4748 21.3184 34.3757 21.4088L23.3806 31.8714L20.1571 26.5765C20.0845 26.4637 19.9904 26.3664 19.8802 26.29C19.77 26.2136 19.6458 26.1596 19.5148 26.1312C19.3837 26.1028 19.2484 26.1005 19.1164 26.1244C18.9845 26.1483 18.8585 26.198 18.7458 26.2706C18.633 26.3432 18.5357 26.4373 18.4593 26.5475C18.3829 26.6577 18.329 26.7818 18.3005 26.9129C18.2721 27.0439 18.2698 27.1793 18.2937 27.3112C18.3177 27.4432 18.3673 27.5691 18.4399 27.6819L22.3176 34.053C22.3249 34.0654 22.3383 34.0719 22.3485 34.0851Z"
      fill="#EC7611"
    />
  </Svg>
);

const Level2Icon = () => (
  <Svg width="56" height="56" viewBox="0 0 56 56" fill="none">
    <G>
      <Path
        d="M29.6503 7.7419C32.0369 6.33724 35.1124 7.18437 36.4433 9.61298C37.2716 11.1246 38.8321 12.0908 40.5545 12.1584C43.3217 12.2671 45.4509 14.6425 45.2575 17.405C45.1371 19.1245 45.9275 20.781 47.3399 21.7691C49.6091 23.3565 50.1161 26.506 48.4598 28.7255C47.4289 30.1068 47.1983 31.9278 47.8523 33.5226C48.9029 36.0848 47.6268 39.0085 45.0335 39.9801C43.4194 40.5849 42.8009 42.4078 39.7629 42.6568C39.482 44.1828 37.9327 42.9152 36.6694 43.5959C35.6781 44.1301 35.2195 44.6531 34.6687 46.2993C32.6276 47.8994 32.6293 47.7785 31.4504 49.0358C29.5561 51.056 26.3665 51.1096 24.4054 49.1543C23.1848 47.9374 21.4152 47.4499 19.7436 47.8703C17.0579 48.5456 14.3456 46.8664 13.7529 44.1612C13.384 42.4775 12.1589 41.1107 10.5254 40.5606C7.90088 39.6767 6.52708 36.7977 7.491 34.2015C8.09095 32.5856 7.79921 30.7735 6.72244 29.4276C4.99243 27.2651 5.39325 24.1004 7.60774 22.4375C8.98605 21.4025 9.72035 19.7203 9.54218 18.0058C9.25592 15.2513 11.3041 12.8057 14.0661 12.604C15.7852 12.4785 17.3124 11.4603 18.0894 9.92173C19.3377 7.44973 22.383 6.49964 24.8155 7.82323C26.3296 8.64703 28.1648 8.61616 29.6503 7.7419Z"
        fill="#FF3E03"
      />
      <Path
        d="M29.9867 11.0207C31.4065 10.185 33.2362 10.689 34.0279 12.1338L34.8993 13.7241C35.3921 14.6233 36.3205 15.1982 37.3452 15.2384L39.1571 15.3095C40.8034 15.3742 42.0701 16.7873 41.955 18.4308L41.8283 20.2398C41.7567 21.2627 42.227 22.2482 43.0672 22.836L44.553 23.8755C45.903 24.8199 46.2047 26.6936 45.2193 28.0139L44.1348 29.4672C43.5215 30.289 43.3843 31.3723 43.7733 32.3211L44.4613 33.9989C45.0864 35.5232 44.3272 37.2625 42.7844 37.8406L41.0863 38.4768C40.1261 38.8366 39.425 39.6737 39.2393 40.6822L38.911 42.4656C38.6127 44.0859 37.0337 45.1386 35.4233 44.7908L33.6508 44.408C32.6485 44.1915 31.6061 44.5167 30.9047 45.2648L29.6644 46.5875C28.5374 47.7894 26.6399 47.8213 25.4732 46.658L24.1891 45.3777C23.4629 44.6537 22.4101 44.3637 21.4157 44.6138L19.6571 45.056C18.0593 45.4578 16.4457 44.4588 16.0931 42.8494L15.705 41.0781C15.4856 40.0764 14.7567 39.2633 13.7849 38.9361L12.0664 38.3573C10.505 37.8315 9.68775 36.1187 10.2612 34.5742L10.8924 32.8742C11.2493 31.9129 11.0757 30.8348 10.4351 30.0341L9.30234 28.6181C8.27313 27.3317 8.51158 25.4489 9.82902 24.4596L11.2791 23.3708C12.099 22.755 12.5359 21.7542 12.4299 20.7343L12.2424 18.9307C12.0721 17.292 13.2906 15.837 14.9338 15.717L16.7423 15.585C17.765 15.5103 18.6736 14.9046 19.1358 13.9892L19.9533 12.3706C20.6959 10.9 22.5076 10.3347 23.9548 11.1222L25.5476 11.9888C26.4483 12.4789 27.5402 12.4606 28.4239 11.9405L29.9867 11.0207Z"
        fill="#FF3E03"
        stroke="#FCCB43"
        strokeWidth="0.973199"
      />
      <Path
        d="M32.3299 48.3303L45.3118 39.9274C43.8645 39.4469 39.4521 38.3225 36.6618 39.8874C33.8715 41.4523 32.8389 46.5176 32.3299 48.3303Z"
        fill="white"
      />
      <Path
        d="M23.079 35.8131C23.1029 35.8413 23.1138 35.8758 23.1394 35.9029C23.1764 35.9396 23.2234 35.9547 23.2649 35.9834C23.3138 36.0195 23.3615 36.0539 23.4151 36.0806C23.4676 36.1056 23.5201 36.1232 23.576 36.1386C23.6551 36.163 23.733 36.1782 23.8146 36.1825C23.8483 36.1832 23.8812 36.1808 23.9155 36.1787C24.018 36.1738 24.1162 36.1533 24.216 36.1169C24.2336 36.11 24.2486 36.1012 24.2661 36.0943C24.332 36.0661 24.4002 36.0485 24.4604 36.0044C24.5033 35.9731 24.5286 35.9265 24.5653 35.8895C24.567 35.8884 24.5701 35.8875 24.5704 35.8861L35.6703 24.0047C35.763 23.9096 35.836 23.7971 35.8853 23.6738C35.9345 23.5505 35.9589 23.4187 35.9572 23.2859C35.9555 23.1531 35.9277 23.022 35.8753 22.9C35.8229 22.778 35.747 22.6675 35.6519 22.5748C35.5568 22.4822 35.4443 22.4091 35.321 22.3599C35.1977 22.3107 35.0659 22.2862 34.9331 22.2879C34.8003 22.2897 34.6692 22.3175 34.5472 22.3699C34.4252 22.4223 34.3147 22.4982 34.222 22.5933L23.9698 33.5665L20.4781 28.5239C20.3999 28.4167 20.3013 28.326 20.188 28.257C20.0747 28.1879 19.9489 28.1419 19.8178 28.1214C19.6867 28.101 19.5529 28.1066 19.4239 28.1379C19.295 28.1692 19.1735 28.2255 19.0663 28.3038C18.9592 28.382 18.8685 28.4806 18.7995 28.5939C18.7304 28.7072 18.6843 28.833 18.6639 28.9641C18.6435 29.0952 18.6491 29.229 18.6803 29.3579C18.7116 29.4869 18.768 29.6084 18.8462 29.7155L23.0466 35.7832C23.0546 35.795 23.0682 35.8006 23.079 35.8131Z"
        fill="#FCCB43"
      />
    </G>
  </Svg>
);

const Level3Icon = () => (
  <Svg width="55" height="54" viewBox="0 0 55 54" fill="none">
    <G>
      <Path
        d="M23.5819 5.1995C24.6017 4.18443 26.1905 4.01595 27.4004 4.79456L33.6785 8.83442C34.0728 9.08819 34.5202 9.24802 34.9861 9.3016L42.4027 10.1546C43.8321 10.319 44.9544 11.4561 45.1001 12.8876L45.8559 20.3147C45.9034 20.7813 46.0573 21.2307 46.3059 21.6283L50.2632 27.9587C51.0259 29.1788 50.8366 30.7652 49.8083 31.7716L44.4727 36.9933C44.1376 37.3213 43.8822 37.7219 43.7263 38.1641L41.2443 45.205C40.766 46.562 39.4076 47.4032 37.9797 47.2266L30.5705 46.3108C30.1051 46.2533 29.6327 46.3033 29.1897 46.4572L22.1375 48.9067C20.7783 49.3787 19.2737 48.8412 18.5214 47.6147L14.6179 41.251C14.3727 40.8512 14.039 40.5131 13.6425 40.2627L7.33047 36.2762C6.11393 35.5079 5.59613 33.9965 6.08597 32.6436L8.62756 25.624C8.78721 25.183 8.84349 24.7113 8.79206 24.2452L7.9733 16.8247C7.8155 15.3946 8.67438 14.0473 10.0375 13.5868L17.1103 11.1973C17.5546 11.0472 17.9585 10.7971 18.2908 10.4662L23.5819 5.1995Z"
        fill="#EC7611"
      />
      <Path
        d="M23.9309 8.49218C24.9507 7.47712 26.5395 7.30863 27.7494 8.08724L32.7865 11.3286C33.1809 11.5823 33.6282 11.7422 34.0941 11.7957L40.0447 12.4801C41.4742 12.6445 42.5965 13.7817 42.7421 15.2131L43.3485 21.1722C43.396 21.6387 43.55 22.0881 43.7986 22.4858L46.9736 27.5649C47.7363 28.785 47.5471 30.3714 46.5187 31.3778L42.2378 35.5673C41.9027 35.8953 41.6473 36.2959 41.4914 36.7382L39.5 42.3873C39.0217 43.7443 37.6633 44.5855 36.2353 44.409L30.2907 43.6741C29.8253 43.6166 29.3529 43.6667 28.9099 43.8205L23.2516 45.7858C21.8924 46.2579 20.3879 45.7204 19.6356 44.4939L16.5037 39.388C16.2585 38.9883 15.9248 38.6502 15.5283 38.3998L10.4639 35.2013C9.24735 34.433 8.72955 32.9215 9.21939 31.5686L11.2586 25.9365C11.4182 25.4956 11.4745 25.0239 11.4231 24.5578L10.7662 18.604C10.6084 17.1739 11.4673 15.8267 12.8304 15.717L18.5051 13.4489C18.9494 13.2988 19.3533 13.0487 19.6857 12.7179L23.9309 8.49218Z"
        stroke="#FFD67F"
        strokeWidth="1.02104"
      />
      <Path
        d="M23.1961 34.169C23.2186 34.1989 23.2275 34.2344 23.2517 34.2633C23.2869 34.3025 23.3335 34.3205 23.3736 34.352C23.4207 34.3913 23.4668 34.4288 23.5194 34.4589C23.5709 34.4873 23.6228 34.5082 23.6782 34.527C23.7566 34.5563 23.8343 34.5763 23.9164 34.5854C23.9504 34.5881 23.9837 34.5877 24.0184 34.5876C24.1221 34.5887 24.2224 34.5739 24.3253 34.5431C24.3434 34.5372 24.359 34.5292 24.3771 34.5233C24.4453 34.4987 24.5151 34.485 24.5785 34.4441C24.6236 34.415 24.6519 34.3696 24.6911 34.3344C24.6929 34.3334 24.6961 34.3327 24.6965 34.3313L36.6008 23.0027C36.6999 22.9123 36.7803 22.8032 36.8373 22.6817C36.8942 22.5602 36.9267 22.4287 36.9329 22.2946C36.939 22.1605 36.9187 22.0266 36.8731 21.9004C36.8275 21.7742 36.7574 21.6582 36.667 21.559C36.5766 21.4599 36.4675 21.3795 36.346 21.3225C36.2245 21.2656 36.0929 21.2331 36.0202 21.2269C35.8969 21.2208 35.7651 21.2411 35.6323 21.2867C35.4384 21.3323 35.3225 21.4024 35.2233 21.4928L24.2282 31.9553L21.0047 26.6604C20.9321 26.5477 20.8381 26.4503 20.7279 26.3739C20.6176 26.2976 20.4935 26.2436 20.3624 26.2152C20.2314 26.1868 20.096 26.1845 19.9641 26.2084C19.8321 26.2323 19.7062 26.282 19.5934 26.3546C19.4807 26.4272 19.3833 26.5212 19.3069 26.6314C19.2305 26.7417 19.1766 26.8658 19.1482 26.9969C19.1198 27.1279 19.1175 27.2633 19.1414 27.3952C19.1653 27.5272 19.215 27.6531 19.2876 27.7659L23.0466 34.9863C23.0546 34.9981 23.0682 35.0038 23.079 35.0162Z"
        fill="#FFD67F"
      />
    </G>
  </Svg>
);

const Level4Icon = () => (
  <Svg width="71" height="71" viewBox="0 0 71 71" fill="none">
    <G>
      <Path
        d="M53.591 25.4142C56.0954 26.5962 57.1264 29.615 55.8682 32.082C55.0851 33.6175 55.1649 35.4512 56.0785 36.9128C57.5463 39.2612 56.7815 42.3582 54.3892 43.7533C52.9003 44.6216 51.976 46.2074 51.9544 47.931C51.9196 50.7001 49.6018 52.8919 46.8351 52.7723C45.113 52.6978 43.4781 53.5321 42.5281 54.9703C41.0017 57.281 37.8669 57.8719 35.6041 56.2754C34.1957 55.2817 32.3409 55.7966 30.425 53.4257C29.0056 54.0525 29.1812 52.0584 27.9075 51.3975C26.908 50.8788 26.2175 50.7942 24.5468 51.2655C22.0754 50.4791 22.1763 50.4126 20.4734 50.1458C17.7375 49.7173 15.0448 46.069 14.4521 43.3638C14.0833 41.6801 12.8581 40.3134 11.2246 39.7632C8.6001 38.8794 7.2263 36.0003 8.19022 33.4042C8.79017 31.7883 8.49843 29.9761 7.42166 28.6302C5.69165 26.4677 6.09246 23.303 8.30696 21.6401C9.68527 20.6051 10.4196 18.9229 10.2414 17.2085C9.95514 14.454 12.0033 12.0083 14.7653 11.8066C16.4844 11.6811 18.0116 10.663 18.7886 9.12437C19.3377 7.44973 22.383 6.49964 24.8155 7.82323C26.3296 8.64703 28.1648 8.61616 29.6503 7.7419Z"
        fill="#FF3E03"
      />
      <Path
        d="M21.5514 50.4753L35.8041 56.4755C35.3865 55.0087 33.8322 50.7289 30.9681 49.3035C28.104 47.878 23.3362 49.8758 21.5514 50.4753Z"
        fill="white"
      />
      <Path
        d="M30.9879 42.9161C31.0118 42.9443 31.0227 42.9788 31.0483 43.0059C31.0853 43.0426 31.1324 43.0577 31.1738 43.0865C31.2227 43.1225 31.2704 43.1569 31.3241 43.1836C31.3766 43.2086 31.429 43.2263 31.4849 43.2416C31.564 43.266 31.642 43.2813 31.7236 43.2855C31.7573 43.2862 31.7901 43.2838 31.8244 43.2817C31.9269 43.2768 32.0251 43.2563 32.125 43.2199C32.1425 43.2131 32.1575 43.2042 32.175 43.1974C32.2409 43.1691 32.3091 43.1515 32.3693 43.1074C32.4122 43.0761 32.4375 43.0295 32.4742 42.9926C32.4759 42.9914 32.479 42.9906 32.4793 42.9892L43.5793 31.1077C43.6719 31.0126 43.745 30.9002 43.7942 30.7769C43.8434 30.6535 43.8679 30.5217 43.8662 30.3889C43.8644 30.2562 43.8366 30.125 43.7842 30.003C43.7318 29.881 43.6559 29.7705 43.5608 29.6779C43.4657 29.5852 43.3533 29.5122 43.2299 29.4629C43.1066 29.4137 42.9748 29.3892 42.842 29.391C42.7093 29.3927 42.5781 29.4205 42.4561 29.4729C42.3341 29.5253 42.2236 29.6012 42.131 29.6963L31.8787 40.6695L28.387 35.6269C28.3088 35.5198 28.2102 35.4291 28.0969 35.36C27.9836 35.291 27.8578 35.2449 27.7267 35.2245C27.5957 35.204 27.4618 35.2096 27.3329 35.2409C27.2039 35.2722 27.0824 35.3286 26.9753 35.4068C26.8681 35.4851 26.7774 35.5836 26.7084 35.6969C26.6393 35.8102 26.5933 35.936 26.5728 36.0671C26.5524 36.1982 26.558 36.332 26.5893 36.461C26.6206 36.5899 26.6769 36.7114 26.7552 36.8186L30.9555 42.8862C30.9635 42.898 30.9771 42.9037 30.9879 42.9161Z"
        fill="#FF3E03"
      />
    </G>
  </Svg>
);

export const ProgressBar = ({ currentPhase, totalPhases, phaseProgress }: ProgressBarProps) => {
  const insets = useSafeAreaInsets();
  const animatedStyle = useAnimatedStyle(() => ({
    width: withTiming(`${phaseProgress * 100}%`, { duration: 300 }),
  }));

  // Fonction pour retourner l'icône du niveau terminé
  const getLevelIcon = (level: number) => {
    if (level === 0) return <Level1Icon />;
    if (level === 1) return <Level2Icon />;
    if (level === 2) return <Level3Icon />;
    if (level === 3) return <Level4Icon />;
    return null;
  };
  const { hideProgressBar } = useLevelStore();

  return (
    <View
      className={`absolute left-0 right-0 top-0 z-10 flex-row items-center justify-center px-4 ${
        hideProgressBar ? 'opacity-0' : ''
      }`}
      style={{ paddingTop: insets.top + 16 }}>
      <View className="flex-row items-center justify-center">
        {/* Ronds des niveaux */}
        {Array.from({ length: totalPhases }).map((_, index) => (
          <View key={index} className="flex-row items-center">
            {index < currentPhase ? (
              <View className="z-50 flex h-[46px] w-[46px] items-center justify-center">
                {getLevelIcon(index)}
              </View>
            ) : (
              <View
                className="z-50 h-7 w-7 rounded-full"
                style={{ backgroundColor: COLORS.background }}
              />
            )}
            {/* Affichage du trait sauf après le dernier niveau */}
            {index < totalPhases - 1 && (
              <View className="relative -ml-1 -mr-1 flex h-[46px] w-[69px] items-center justify-center">
                <View
                  className="z-0 h-3 w-full justify-center"
                  style={{ backgroundColor: COLORS.background }}>
                  <Animated.View
                    className="z-0 h-1.5"
                    style={[
                      // Le trait n°i correspond à la progression du niveau i+1
                      index + 1 === currentPhase
                        ? animatedStyle
                        : { width: `${index + 1 < currentPhase ? 100 : 0}%` },
                      {
                        backgroundColor:
                          index + 1 < currentPhase
                            ? COLORS.completed
                            : index + 1 === currentPhase
                              ? COLORS.completed
                              : 'transparent',
                      },
                    ]}
                  />
                </View>
              </View>
            )}
          </View>
        ))}
      </View>
    </View>
  );
};
